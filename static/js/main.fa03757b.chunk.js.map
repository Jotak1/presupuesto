{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Pregunta.js","components/Gasto.js","components/Listado.js","helpers.js","components/Controlpresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Formulario","guardarGasto","guardarCrearGasto","useState","nombre","guardarNombre","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","trim","gasto","id","shortid","generate","type","placeholder","value","onChange","target","parseInt","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa03757b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n        <p className=\"alert alert-danger error\">{mensaje}</p>\r\n     );\r\n}\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\nexport default Error;\r\n","import React, { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [ error, guardarError] = useState(false);\r\n    // cuando el usuario agrega un gasto\r\n    const agregarGasto = (e) => {\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        // construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n        // pasar el gasto el componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n        // resetear el form\r\n        guardarNombre('');\r\n        guardarCantidad('');\r\n    }\r\n   \r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos aquÃ­</h2>\r\n            { error ? (<Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\"/>):( null)}\r\n            <div className=\"campo\">\r\n                <label>Nombre gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Comida\"\r\n                    value={nombre}\r\n                    onChange = {e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label>Cantidad gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 20000\"\r\n                    value={cantidad}\r\n                    onChange = {e => guardarCantidad(parseInt(e.target.value))}\r\n                />\r\n            </div>\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\nexport default Formulario;","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n    //definir el state\r\n    const [ cantidad, guardarCantidad ] = useState(0)\r\n    const [ error, guardarError] = useState(false);\r\n     // Funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n       guardarCantidad(parseInt(e.target.value, 10))    \r\n    }\r\n    //submit para definir el presupuesto\r\n    const agregarPresupuesto = e =>{\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if(cantidad < 1 || isNaN(cantidad)){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        //si se pasa la validacion\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n            {error ? <Error mensaje={\"El Presupuesto es Incorrecto\"}/> : null}\r\n            \r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type='number'\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\nexport default Pregunta;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => {\r\n    return ( \r\n        <li className=\"gastos\">\r\n            <p>\r\n                {gasto.nombre}\r\n\r\n                <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n            </p>\r\n        </li>\r\n     );\r\n}\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => {\r\n    return ( \r\n        <div className=\"gastos-realizados\">\r\n            <h2>Listado</h2>\r\n            {gastos.map(gasto => (\r\n                <Gasto\r\n                    key={gasto.id}\r\n                    gasto={gasto}\r\n                />\r\n            ))}\r\n        </div> \r\n    );\r\n}\r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if(( presupuesto / 4) > restante ){\r\n        clase = 'alert alert-danger';\r\n    } else if ( (presupuesto/2) > restante ){\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n}","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { revisarPresupuesto } from '../helpers';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\nexport default ControlPresupuesto;","import React, { useState, useEffect } from \"react\";\r\nimport Formulario from \"./components/Formulario\";\r\nimport Pregunta from \"./components/Pregunta\";\r\nimport Listado from \"./components/Listado\";\r\nimport ControlPresupuesto from \"./components/Controlpresupuesto\";\r\n\r\nfunction App() {\r\n  //definir el state\r\n  const [presupuesto, guardarPresupuesto] = useState(0);\r\n  const [restante, guardarRestante] = useState(0);\r\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\r\n  const [gastos, guardarGastos] = useState([]);\r\n  const [gasto, guardarGasto] = useState({});\r\n  const [creargasto, guardarCrearGasto] =  useState(false);\r\n\r\n  // UseEffect actualizar restante\r\n\r\n  useEffect(() => {\r\n    if(creargasto){\r\n      //agrega el nuevo presupuesto\r\n      guardarGastos([...gastos,gasto]);\r\n      //resta del presupuesto actual\r\n      const presupuestoRestante = restante - gasto.cantidad\r\n      guardarRestante(presupuestoRestante);\r\n      //resetear a false\r\n      guardarCrearGasto(false);\r\n    }\r\n  }, [gasto, creargasto, gastos, restante]);\r\n\r\n \r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>Gasto Semanal/Mensual</h1>\r\n\r\n        <div className=\"contenido-principal contenido\">\r\n          {mostrarpregunta ? (\r\n            <Pregunta\r\n              guardarPresupuesto={guardarPresupuesto}\r\n              guardarRestante={guardarRestante}\r\n              actualizarPregunta={actualizarPregunta}\r\n            />\r\n          ) : (\r\n            <div className=\"row\">\r\n              <div className=\"one-half column\">\r\n                <Formulario\r\n                  guardarGasto={guardarGasto}\r\n                  guardarCrearGasto={guardarCrearGasto}\r\n                />\r\n              </div>\r\n              <div className=\"one-half column\">\r\n                <Listado\r\n                  gastos={gastos}\r\n                />\r\n                <ControlPresupuesto\r\n                  presupuesto={presupuesto}\r\n                  restante={restante}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}